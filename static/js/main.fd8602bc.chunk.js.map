{"version":3,"sources":["components/Navigation/Side_menu_list.js","components/Navigation/Nav1.js","components/Section/Section1.js","components/Section/page/ImageSlider.js","components/Section/page/Java1.js","components/Section/page/Jsp1.js","components/Section/page/Jsp2.js","components/Section/page/Nodejs1.js","components/Section/page/OracleDB1.js","components/Section/page/MySQL1.js","components/Section/page/Backend_error1.js","components/Section/page/Html1.js","components/Section/page/Network1.js","components/Section/page/Design1.js","components/Section/page.js","components/Section/Section2.js","App.js","reportWebVitals.js","index.js"],"names":["Sidemenulist","props","useState","activeMenu","setActiveMenu","send","page","onChangePage","Sidemenu","href","className","onClick","goToMenu","children","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","Nav","type","id","htmlFor","Section1","ImageSlider","pageNum","setPageNum","Fragment","image","src","process","parseInt","Java1","div","name","stitle","content","desc","example","Jsp1","target","style","background","Jsp2","text","Nodejs1","OracleDB1","MySQL1","Backend_error1","Html1","issue","def","use","Network1","Design1","Page","setPage","useEffect","Section2","changePage","setChangePage","console","log","App","whatPage","setWhatPage","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd8602bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Side_menu_list.css';\r\n\r\nfunction Sidemenulist(props) {\r\n  const [activeMenu,setActiveMenu] = useState('main');\r\n  \r\nfunction send(page) { props.onChangePage(page); };\r\n\r\nfunction Sidemenu(props) {\r\n  return(\r\n    <a href=\"#\" className=\"menu-item\" onClick={() => props.goToMenu && setActiveMenu(props.goToMenu)}>\r\n      <div className=\"each_menu_container\">\r\n        {props.children}\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n  \r\n  return (\r\n    <div className=\"side_menu_list\">\r\n\r\n        {/* 첫번째 메뉴 */}\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'main'}\r\n            timeout={500}\r\n            classNames=\"menu-first\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('main')}>\r\n            <div className=\"menu menu1\">\r\n              <Sidemenu> <a onClick={()=>{ send('main'); }}> 메인 메뉴 </a> </Sidemenu>\r\n              <Sidemenu goToMenu=\"backendmenu\"> 백엔드👉  </Sidemenu>\r\n              <Sidemenu goToMenu=\"frontendmenu\"> 프론트엔드👉  </Sidemenu>\r\n              <Sidemenu goToMenu=\"designmenu\"> 디자인👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"networkmenu\">네트워크 및 시스템👉  </Sidemenu>\r\n              <Sidemenu goToMenu=\"effcodemenu\"> 효율적인코드작성👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"devtoolmenu\"> 개발도구👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"makemenu\"> 만들어보기👉</Sidemenu>\r\n            </div>\r\n\r\n            \r\n        </CSSTransition>\r\n\r\n        {/* 두번째 메뉴  ========================================================= */}\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'frontendmenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('frontendmenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 프론트엔드  </Sidemenu>\r\n              <Sidemenu goToMenu=\"html\"> HTML👉</Sidemenu>\r\n              <Sidemenu goToMenu=\"css\"> CSS👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"javascript\"> JavaScript👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"typescript\">TypeScript👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"react\"> React👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"frontenderror\"> 프론트엔드 오류👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"vuejs\"> Vue.js </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'backendmenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('backendmenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 백엔드 </Sidemenu>\r\n              <Sidemenu goToMenu=\"java\"> Java👉</Sidemenu>\r\n              <Sidemenu goToMenu=\"jsp\"> JSP👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"php\"> PHP👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"nodejs\"> Node.js👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"oracledb\">OracleDB👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"mysql\">MySQL👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"backenderror\"> 백엔드 오류👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"codemenu\"> MongoDB </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"makemenu\"> Mysql </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"makemenu\"> MariaDB </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'designmenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('designmenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 디자인 </Sidemenu>\r\n              <Sidemenu goToMenu=\"figma\"> Figma👉</Sidemenu>\r\n              <Sidemenu goToMenu=\"photoshop\"> Photoshop👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'networkmenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('networkmenu')}>\r\n              \r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 네트워크 및 시스템 </Sidemenu>\r\n              <Sidemenu goToMenu=\"security\"> security👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"server\"> server,network👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"rinux\"> rinux👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"window\"> window👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"networkerror\"> 오류👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'effcodemenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('effcodemenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 효율적인 코드 작성 </Sidemenu>\r\n              <Sidemenu goToMenu=\"design_pattern\"> design pattern👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"algorithm\"> Algorithm👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"data_structure\"> Data structure👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"refactory\"> refactoring👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'devtoolmenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('devtoolmenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 개발 도구 </Sidemenu>\r\n              <Sidemenu goToMenu=\"github\"> github👉 </Sidemenu>\r\n              <Sidemenu goToMenu=\"postman\"> postman👉 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'makemenu'}\r\n            timeout={500}\r\n            classNames=\"menu-second\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('makemenu')}>\r\n\r\n            <div className=\"menu menu2\">\r\n              <Sidemenu goToMenu=\"main\"> 만들어 보기 </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        {/* 세번째 메뉴 - 프론트 엔드 ========================================================= */}\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'html'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('html')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> HTML </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('html1')}}>HTML1👉</a>  </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('html2')}}>HTML2👉</a>  </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('html3')}}>HTML3👉</a>  </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('html4')}}>HTML4👉</a>  </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('html5')}}>HTML5👉</a>  </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'css'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('css')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> CSS </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'javascript'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('javascript')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> JavaScipt </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'typescript'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('typescript')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> TypeScript </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'react'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('react')}>\r\n              \r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> React </Sidemenu>\r\n              <Sidemenu> <a href=\"#\" onClick={()=>{send('react1')}}> React1👉 </a>  </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'frontenderror'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('frontenderror')}>\r\n              \r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"frontendmenu\"> 프론트엔드 오류 </Sidemenu>\r\n              <Sidemenu> <a href=\"#\" onClick={()=>{send('error')}}> 프론트엔드 오류👉 </a>  </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n\r\n        </CSSTransition>\r\n\r\n        {/* 세번째 메뉴 - 백 엔드 ========================================================= */}\r\n        <CSSTransition             \r\n            in={activeMenu === 'java'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('java')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> Java </Sidemenu>\r\n              <Sidemenu> <a href=\"#\" onClick={()=>{send('java1')}}>Java1👉</a>  </Sidemenu>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'jsp'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('jsp')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> JSP </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp1')}}>JSP-MySQL👉</a>  </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp2')}}>JSP-OracleDB👉</a>  </Sidemenu>\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'php'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('php')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> PHP </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('php1')}}>PHP1👉</a>  </Sidemenu>\r\n                {/* <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp2')}}>JSP2</a>  </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'nodejs'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('nodejs')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> Node.js </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('nodejs1')}}>Node.js1👉</a>  </Sidemenu>\r\n                {/* <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp2')}}>JSP2</a>  </Sidemenu> */}\r\n              {/* <Sidemenu goToMenu=\"\">  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'oracledb'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('oracledb')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> OracleDB </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('oracledb1')}}>OracleDB1👉</a>  </Sidemenu>\r\n                {/* <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp2')}}>JSP2</a>  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        <CSSTransition             \r\n            in={activeMenu === 'mysql'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('mysql')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> MySQL </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('mysql1')}}>MySQL1👉</a>  </Sidemenu>\r\n                {/* <Sidemenu> <a href=\"#\" onClick={()=>{send('jsp2')}}>JSP2</a>  </Sidemenu> */}\r\n            </div>\r\n        </CSSTransition>\r\n        \r\n        {/* 세번째 메뉴 - 디자인 ========================================================= */}\r\n        <CSSTransition             \r\n            in={activeMenu === 'design'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('design')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> Network </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('design1')}}>Figma 👉</a>  </Sidemenu>\r\n            </div>\r\n        </CSSTransition>\r\n\r\n        \r\n        {/* 세번째 메뉴 - 네트워크 및 시스템 ========================================================= */}\r\n        <CSSTransition             \r\n            in={activeMenu === 'server'}\r\n            timeout={500}\r\n            classNames=\"menu-third\"\r\n            unmountOnExit\r\n            onEnter={()=>setActiveMenu('server')}>\r\n\r\n            <div className=\"menu menu3\">\r\n              <Sidemenu goToMenu=\"backendmenu\"> Network </Sidemenu>\r\n                <Sidemenu> <a href=\"#\" onClick={()=>{send('network1')}}>Network 이론👉</a>  </Sidemenu>\r\n            </div>\r\n        </CSSTransition>\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default Sidemenulist;","import React, { useState,useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Nav1.css';\r\nimport Side_menu_list from './Side_menu_list.js';\r\n\r\nconst Nav = (props) => {\r\n    // onChangePage={(page)=>{{changePage(page)}}} \r\n    return(\r\n        <nav className=\"nav_container\">\r\n            <div className=\"nav_frame\">\r\n                <input type=\"checkbox\" id=\"menuicon\"/>\r\n                <div className=\"menuicon_container\">\r\n                    <label htmlFor=\"menuicon\">\r\n                        <span> </span>\r\n                        <span> </span>\r\n                        <span> </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"logo_container\">\r\n                    <div>\r\n                        로고\r\n                    </div>\r\n                </div>\r\n                <div className=\"nav_menu_container\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"side_menu_container\">\r\n                    <Side_menu_list onChangePage={(page)=>{props.onChangePage(page);}}> </Side_menu_list>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n  }\r\n\r\nexport default Nav;\r\n\r\n{/* <nav className=\"nav_container\">\r\n<input type=\"checkbox\" id=\"menuicon\"/>\r\n<div className=\"menuicon_container\">\r\n    <label htmlFor=\"menuicon\">\r\n        <span> </span>\r\n        <span> </span>\r\n        <span> </span>\r\n    </label>\r\n</div>\r\n<div className=\"logo_container\">\r\n    로고\r\n</div>\r\n<div className=\"nav_menu_container\">\r\n    <ul>\r\n        <li>1</li>\r\n        <li>2</li>\r\n        <li>3</li>\r\n        <li>4</li>\r\n    </ul>\r\n</div>\r\n<div className=\"side_menu_container\">\r\n    <Sidemenulist onChangePage={(page)=>{\r\n        props.onChangePage(page);\r\n    }} >\r\n    </Sidemenulist>\r\n</div>\r\n</nav> */}","import React,{useState} from 'react';\r\nimport './Section1.css';\r\n\r\n// arr=['파일명(/img/jsp3_)', '장면수', '확장자(.png)']\r\n// 화면 1분할\r\nconst Section1 = () => {\r\n    return (\r\n        <section className=\"section1_container\">\r\n            <div className=\"section1_frame\">\r\n                홈페이지 \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Section1;","import React,{useState} from 'react';\r\nimport './ImageSlider.css';\r\n\r\n// arr=['파일명(/img/jsp3_)', '장면수', '확장자(.png)']\r\nconst ImageSlider = (props) => {\r\n    var [pageNum,setPageNum] = useState(1);\r\n    return (\r\n        <React.Fragment>\r\n            {props.image[1]==0?null:\r\n                <div className=\"imageslider_container\" >\r\n                    <img className=\"img_container\" src={process.env.PUBLIC_URL + props.image[0] + pageNum +props.image[2]}/>\r\n                    <div className=\"img_button_position\">\r\n                        <button className =\"left_arrow_button arrow_button\" onClick={()=> {\r\n                            if(pageNum>1) { setPageNum(parseInt(pageNum)-1); }}}>  &lt; </button>\r\n                        <div className=\"show_page_num\"> {pageNum} / {props.image[1]} </div>\r\n                        <button className =\"right_arrow_button arrow_button\" onClick={()=> {\r\n                            if(pageNum<props.image[1]) {setPageNum(parseInt(pageNum)+1);}}}> &gt; </button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    );   \r\n }\r\n\r\n export default ImageSlider;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\n\r\nconst Java1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. Java\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) \" content=\"?\"/>\r\n            <p desc=\"\"\r\n            example=\"\"> </p>                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Java1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\n//JSP - MySQL\r\nconst Jsp1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. JSP 기초\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) JSP\" content=\"JSP란?\"/>\r\n            <p desc=\"자바에서 HTML,JavaScript를 사용할 수 있게 해주는 프레임워크\r\n            Servlet에서 더 향상된 프레임워크로 기반은 Servlet이고, Servlet보다 Html,JavaScript를 좀더\r\n            사용자는 편하게 사용할 수 있다는 장점이 있다.\"\r\n            example=\"\"> </p>\r\n            <p> 그렇다면 왜 JSP가 탄생했을까? 웹에 처음으로 돌아가서 단계별로 설명하겠다. </p>\r\n            <p>(1) 초창기의 웹은 HTML,CSS문서와 같이 움직이지 않는 정적인 페이지만을 처리하였다. \r\n            그래서 동적인 움직이는 페이지를 사용자는 원하게 되었고</p>\r\n            <p>(2) 자바스크립트와 같이 동적인 페이지를 만들 수 있게 되었다. 하지만 문제가 있었다. 그떄 당시에는 \r\n                동적인 페이지를 서버가 처리를 하고 클라이언트에게 보내는 것이 아니라 통쨰로 클라이언트에게 보내고  \r\n                클라이언트는 그떄 당시에는 거대한 용량을 스스로 처리해야 하는 부담이 생겼다. 그렇다고 서버가 데이터베이스와 결과를 처리를 해서 \r\n                보내기에는또 부담이 크기 때문에 이 또한 불가능 하였다.</p>\r\n            <p>(3) 이렇기 떄문에 클라이언트와 데이터베이스(서버) 중간에 미들웨어(서버)라는 존재가 탄생하였다. 중간에서\r\n            클라이언트의 요청과 데이터베이스에서 결과를 받고 처리를 해서 클라이언트에게 넘겨주는 방식이 생겨나게 되었다. </p>\r\n            <p>(4) 미들웨어가 존재해서 편해졌는데 시대가 발전하고 처리할 요구가 많아지자 정적데이터와 동적데이터를 처리하는\r\n            미들웨어 2개로 나뉘게 되었다. 이 때 동적데이터를 처리하는 서버를 WAS라 부르고 아파치톰캣이 이와 같은 역할을 하는 것이다. </p>\r\n            <p>(5) 과거에는 WAS는 정적인 데이터를 처리하는 웹서버 역할을 하지 않았지만 지금은 WAS가 처리는 가능하지만\r\n            웹서버와 동시에 운영을 한다(WAS에 문제가 발생하여도 안정적인 서버운영이 가능하기 떄문) </p>\r\n            <p>(6) Servlet은 자바기반으로 WAS에서 작동한다. 하지만 Servlet은 HTML 코드와 함께 작성하려면 코드작성이 불편하다\r\n                그러므로 좀더 쉽게 코드를 작성하기 위해 JSP가 만들어졌다.</p>\r\n            <p>(7) 클라이언트가 JSP로 요청을 하면 Servlet코드로 변경이되고(아파치톰캣의 역할) 처리결과를 HTML파일로 클라이언트에게 제공한다.</p>\r\n\r\n            <p stitle=\"2) JSP 이클립스에서 설정하기\" content=\"JSP사용하기 위한 다운로드\"/>\r\n            <p desc=\"\r\n            1. 이클립스 설치 -> 2. apache tomcat설치 -> 3.이클립스 실행\"\r\n            example=\"\"> </p>\r\n            <a href=\"https://www.eclipse.org/downloads/\" target='blank' > 👀 이클립스 설치 </a> <br/>\r\n            <a href=\"https://tomcat.apache.org/download-80.cgi\" target='blank'> 👀 아파치톰캣 설치 </a>\r\n\r\n            <p stitle=\"3) JSP\" content=\"JSP사용하기 위한 이클립스 초기설정\"/>\r\n            <p desc=\"JSP를 사용하기 위해 기본 설치를 하는 과정\"\r\n            example=\"아파치 톰캣이 실행되기까지 테스트\"> </p>\r\n            <p style={{background: 'red'}}>  </p>\r\n            <ImageSlider image={arr=['/img/jsp1_3_','20','.png']}> </ImageSlider>\r\n\r\n            <p stitle=\"4) JSP-MySQL\" content=\"JSP와 MySQL 연결하기\"/>\r\n            <p desc=\"MySQL을 사용하기 위해 MySQL을 설치하고 연동하는 과정\"\r\n            example=\"package day1;\r\n\r\n            import java.sql.Connection;\r\n            import java.sql.DriverManager;\r\n            \r\n            public class Test1 {\r\n                \r\n                public static void main(String[] args) {\r\n                    String DBdriver = &quot;com.mysql.jdbc.Driver&quot;;\r\n                    try {\r\n                        Class.forName(DBdriver);\r\n                        \r\n                        String url = &quot;jdbc:mysql://localhost:3306/sqltestdb&quot;;\r\n                        String user=&quot;root&quot;;\r\n                        String password=&quot;1234&quot;;\r\n                        Connection conn = DriverManager.getConnection(url,user,password);\r\n                        \r\n                        conn.close();\r\n                        System.out.println(&quot;확인&quot;);\r\n                        \r\n                    }catch(Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\"> </p> <br/><p>✔ 위코드를 복사하고 Ctrl+Shift+F 를 하면 이클립스에서 코드가 정리됩니다.</p>\r\n            <p>✔ 기본 포트번호가 3306이지만 MySQL Workbench 홈에서 각자 포트번호 한번 보시기 바랍니다. </p>\r\n            <p>✔ cmd창 ➡ mysql -u root -p1234 입력➡ show databases 입력, 만들어둔 sqltestdb 확인 <br/>\r\n            ➡ use sqltestdb 입력 ➡ show tables; 입력, 테이블 확인하는 방법 <br/>\r\n            ➡ select * from test; 입력, 테이블의 레코드를 보는 sql문 <br/> \r\n            ➡ exit 입력 혹은 그냥 종료해도 상관없음  </p> <br/> \r\n            <a href=\"https://dev.mysql.com/downloads/\" target='blank'> 👀 MySQL 다운로드 전체 </a> <br/>\r\n            <a href=\"https://dev.mysql.com/downloads/windows/installer/8.0.html\" target='blank'> 👀 MySQL Community Downloads MSI Installer</a>  <br/>\r\n            <a href=\"https://dev.mysql.com/downloads/connector/net/\" target='blank'> 👀 MySQL Connector NET </a>  <br/>\r\n            <ImageSlider image={arr=['/img/jsp1_4_','27','.png']}> </ImageSlider>\r\n\r\n            <p style={{background: 'red'}}>  </p>\r\n            <p stitle=\"1) JSP\" content=\"JSP란?\"/>\r\n            <p desc=\"\"\r\n            example=\"< style={{background: 'red'}}>  </>\"> </p>\r\n            <p style={{background: 'red'}}>  </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jsp1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\n//JSP - OracleDB\r\nconst Jsp2 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. JSP 기초\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) JSP\" content=\"JSP란?\"/>\r\n            <p desc=\"자바에서 HTML,JavaScript를 사용할 수 있게 해주는 프레임워크\r\n            Servlet에서 더 향상된 프레임워크로 기반은 Servlet이고, Servlet보다 Html,JavaScript를 좀더\r\n            사용자는 편하게 사용할 수 있다는 장점이 있다.\"\r\n            example=\"\"> </p>\r\n            <p> 그렇다면 왜 JSP가 탄생했을까? 웹에 처음으로 돌아가서 단계별로 설명하겠다. </p>\r\n                <p>(1) 초창기의 웹은\r\n                HTML,CSS문서와 같이 움직이지 않는 정적인 페이지만을 처리하였다. 그래서 동적인 움직이는 페이지를 사용자는 원하게 되었고</p>\r\n                <p>(2) 자바스크립트와 같이 동적인 페이지를 만들 수 있게 되었다. 하지만 문제가 있었다. 그떄 당시에는 \r\n                동적인 페이지를 서버가 처리를 하고 클라이언트에게 보내는 것이 아니라 통쨰로 클라이언트에게 보내고  \r\n                클라이언트는 그떄 당시에는 거대한 용량을 스스로 처리해야 하는 부담이 생겼다. 그렇다고 서버가 데이터베이스와 결과를 처리를 해서 \r\n                보내기에는또 부담이 크기 때문에 이 또한 불가능 하였다.</p>\r\n                <p>(3) 이렇기 떄문에 클라이언트와 데이터베이스(서버) 중간에 미들웨어(서버)라는 존재가 탄생하였다. 중간에서\r\n            클라이언트의 요청과 데이터베이스에서 결과를 받고 처리를 해서 클라이언트에게 넘겨주는 방식이 생겨나게 되었다. </p>\r\n                <p>(4) 미들웨어가 존재해서 편해졌는데 시대가 발전하고 처리할 요구가 많아지자 정적데이터와 동적데이터를 처리하는\r\n                    미들웨어 2개로 나뉘게 되었다. 이 때 동적데이터를 처리하는 서버를 WAS라 부르고 아파치톰캣이 이와 같은 역할을 하는 것이다. </p>\r\n                <p>(5) 과거에는 WAS는 정적인 데이터를 처리하는 웹서버 역할을 하지 않았지만 지금은 WAS가 처리는 가능하지만\r\n                    웹서버와 동시에 운영을 한다(WAS에 문제가 발생하여도 안정적인 서버운영이 가능하기 떄문) </p>\r\n                <p>(6) Servlet은 자바기반으로 WAS에서 작동한다. 하지만 Servlet은 HTML 코드와 함께 작성하려면 코드작성이 불편하다\r\n                그러므로 좀더 쉽게 코드를 작성하기 위해 JSP가 만들어졌다.</p>\r\n                <p>(7) 클라이언트가 JSP로 요청을 하면 Servlet코드로 변경이되고(아파치톰캣의 역할) 처리결과를 HTML파일로 클라이언트에게 제공한다.</p>\r\n\r\n            <p stitle=\"2) JSP 이클립스에서 설정하기\" content=\"JSP사용하기 위한 다운로드\"/>\r\n            <p desc=\"\r\n            1. 이클립스 설치 -> 2. apache tomcat설치 -> 3.이클립스 실행\"\r\n            example=\"\"> </p>\r\n            <a href=\"https://www.eclipse.org/downloads/\" target='blank' > 👀 이클립스 설치 </a> <br/>\r\n            <a href=\"https://tomcat.apache.org/download-80.cgi\" target='blank'> 👀 아파치톰캣 설치 </a>\r\n\r\n            <p stitle=\"3) JSP\" content=\"JSP사용하기 위한 이클립스 초기설정\"/>\r\n            <p desc=\"JSP를 사용하기 위해 기본 설치를 하는 과정\"\r\n            example=\"아파치 톰캣이 실행되기까지 테스트\"> </p>\r\n            <p style={{background: 'red'}}>  </p>\r\n            {/* mysql과 똑같은 방법이므로 이미지 공동으로 사용 */}\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp1_3_','20','.png']}> </ImageSlider>\r\n\r\n            <p stitle=\"4) JSP-OracleDB\" content=\"JSP와 OracleDB 연결하기\"/>\r\n            <p desc=\"OracleDB을 사용하기 위해 OracleDB을 설치하고 연동하는 과정\"\r\n            example=\"package day2;\r\n\r\n            import java.sql.Connection;\r\n            import java.sql.DriverManager;\r\n            \r\n            public class Test2 {\r\n                public static void main(String[] args) {\r\n                    String url = &quot;jdbc:oracle:thin:@localhost:1521:xe&quot;;\r\n                    String user =&quot;system&quot;;\r\n                    String password = &quot;1234&quot;;\r\n                    Connection conn = null;\r\n                    try {\r\n                        Class.forName(&quot;oracle.jdbc.driver.OracleDriver&quot;);\r\n                        conn = DriverManager.getConnection(url,user,password);\r\n                        conn.close();\r\n                        System.out.println(&quot;확인&quot;);\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n            }\"> </p> <br/> \r\n            <p text=\"예제코드2 : package day2;\r\n\r\n                import java.sql.Connection;\r\n                import java.sql.DriverManager;\r\n                import java.sql.ResultSet;\r\n                import java.sql.Statement;\r\n\r\n                public class Test2 {\r\n                    public static void main(String[] args) {\r\n                        String url = &quot;jdbc:oracle:thin:@localhost:1521:xe&quot;;\r\n                        String user =&quot;c##사용자명&quot;;\r\n                        String password = &quot;1234&quot;;\r\n                        Connection conn = null;\r\n                        try {\r\n                            Class.forName(&quot;oracle.jdbc.driver.OracleDriver&quot;);\r\n                            String sql = &quot;SELECT * FROM testtable&quot;;\r\n                            conn = DriverManager.getConnection(url,user,password);\r\n                            Statement st = conn.createStatement();\r\n                            ResultSet rs = st.executeQuery(sql);\r\n                            while(rs.next()) {\r\n                                System.out.println(rs.getString(1));\r\n                            }\r\n                            conn.close();\r\n                            st.close();\r\n                            rs.close();\r\n                            System.out.println(&quot;확인&quot;);\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n                    }\r\n                }\"> </p>\r\n            \r\n            \r\n            \r\n            <br/><p>✔ 위코드를 복사하고 Ctrl+Shift+F 를 하면 이클립스에서 코드가 정리됩니다.</p>\r\n            <p>✔ 기본 포트번호가 1521/xe </p>\r\n            <p>✔ OracleDB를 설치하고 나서 아래 코드를 입력하여 테이블을 생성 </p>\r\n            <p>cmd창 ➡ sqlplus system/1234 ➡  CREATE user c##유저이름 identified by 비밀번호; </p>\r\n            <p>➡ GRANT connect,resource,create view,create procedure,dba,create any table to c##유저이름; \r\n            <p>➡  conn c##사용자명/비밀번호; ➡ create table testtable(num number); </p>\r\n            ➡ insert into testtable values(1); <br/> \r\n            ➡ insert into testtable values(2); <br/> \r\n            ➡ insert into testtable values(3); <br/> \r\n            ➡ select * from testtable; 입력, 테이블의 레코드를 보는 sql문 <br/> \r\n            ➡ exit 입력 혹은 그냥 종료해도 상관없음  </p> <br/> \r\n            <a href=\"https://www.oracle.com/database/technologies/xe-downloads.html\" target='blank'> 👀 OracleXE(필수) </a>  <br/>\r\n            <a href=\"https://www.oracle.com/database/technologies/appdev/jdbc-downloads.html\" target='blank'> 👀 OracleDB JDBC 드라이버(필수) </a>  <br/>\r\n            <a href=\"https://www.oracle.com/tools/downloads/sqldev-downloads.html\" target='blank'> 👀 OracleDB Developer </a>  <br/>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_4_','20','.png']}> </ImageSlider> <br/><br/><br/>\r\n\r\n            \r\n\r\n            <p stitle=\"5) JSP 사용하기 \" content=\"이클립스에서 JSP파일 생성\"/>\r\n            <p text=\"JSP는 HTML과 달리 <%@ %> 기호를 이용한다.\"> </p>\r\n            <p> 만약에 작동이 잘 되지 않는다면 기존에 사용된 서버를 종료하고 다시 연결하기 ,\r\n                그리고 ctrl + s 저장하기 누르기!! JSP는 저장 안되면 실행x  </p>\r\n            <p> 개인마다 다르지만 아래의 경로를 따라가면 jsp파일이 java파일(Servlet)로 변한것을 볼 수 있다.   </p>\r\n            <p> 이클립스폴더\\.metadata\\.plugins\\org.eclipse.wst.server.core\r\n                \\tmp0\\work\\Catalina\\localhost\\day2\\org\\apache\\jsp</p>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_5_','2','.png']}> </ImageSlider> <br/>\r\n            \r\n            <p stitle=\"6) Servlet 사용하기\" content=\"이클립스에서 Servlet파일 생성\"/>\r\n            <p text=\"Servlet은 코드를 작성하기 번거로우나 JSP파일은 Servlet으로 변환이\r\n            되므로 개발자는 알아두어야 한다. \"> </p>\r\n            <p> Servlet은 그냥 실행해도 결과가 나온다 <div className=\"\"></div></p>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_6_','5','.png']}> </ImageSlider> <br/>\r\n            \r\n            <p stitle=\"7) JSP 문법\" content=\"JSP 코드 작성 및 문법이해\"/>\r\n            <p> JSP문법</p>\r\n            <p> 선언문(Declaration) : &lt;%! %&gt; , (메서드,변수 등)선언 태그 </p>\r\n            <p> 표현식(Experssion) : &lt;%= %&gt; , 화면에 출력할 때 사용, 메소드 호출</p>\r\n            <p> 스크립트릿(Scriptlet) : &lt;% %&gt;  , 끊어서도 사용 가능, 일반적인 코드 작성</p>\r\n            <p> html주석 : &lt;!-- --&gt; </p>\r\n            <p> JSP주석 : &lt;%-- --%&gt; </p>\r\n            <p> Java주석 : // , /**/ </p>\r\n            <br/>\r\n\r\n            <p> &lt;%@ isErrorPage=\"true\" %&gt; 에러가 났을때 발생하는 페이지 </p>\r\n            <p> &lt;%@ errorPage=\".jsp\" %&gt; 에러가 났을때 발생하는 이동되는 페이지 </p>\r\n            <p> &lt;%@ include file=\".jsp\" %&gt; 다른 파일 불러오기  </p>\r\n            <p> &lt;jsp:include page=\".jsp\" &gt; &lt;/jsp:include&gt; 요청전달에 사용, 다른페이지를 현재페이지에 포함, 실행시점에 해당파일 호출\r\n                그 결과를 포함 ,제어권이 현재 페이지</p>\r\n            <p> &lt;jsp:param value=\"\" name=\"\" @등=\"\" %&gt; 매개변수로 받아옴 </p>\r\n            <p> &lt;jsp:forward page=\".jsp\" &gt; &lt;/jsp:forward&gt; 제어권이 다른 페이지 </p>\r\n            <br/>\r\n\r\n            <p> JSP 내장객체 </p>\r\n            <p>request, resposne, pageContext, session, application, page, out, config</p>\r\n            <p> HTML에서 파라미터 받아오는 법: request.getParameter(\"name값\"); </p>\r\n            <p> 요청한 받은값 인코딩: request.setCharacterEncoding(\"UTF-8\");</p>\r\n            <p> 요청한 받은값 인코딩: request.getParameterValues(\"배열일떄\");</p>\r\n            <p> 요청받은 메소드 확인 request.getMethod()</p>\r\n            <p> 요청받은 프로토콜 확인 request.getProtocol()</p>\r\n            \r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_7_','4','.png']}> </ImageSlider> <br/>\r\n\r\n            <p stitle=\"8) Servlet 이용\" content=\"Servlet 이용해보기\"/>\r\n            <p>✔ Servlet과 JSP문법의 큰 차이는 없고 HTML코드를 작성하는 부분만 약간 다르다.</p>\r\n            <p>✔ Ctrl + Shift + O 하면 import가 자동으로 된다.</p>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_8_','2','.png']}> </ImageSlider> <br/>\r\n\r\n            <p stitle=\"9) JSP JavaBean\" content=\"JavaBean 이용\"/>\r\n            <p> 자바Bean은 자바로 작성된 소프트웨어 컴포넌트 </p>\r\n            <p> 그렇다면 컴포넌트란 무엇인가? 컴포넌트라는 개념은 리액트에서도 볼 수 있는데\r\n            간단하게 말하자면 가져다가 쓰면 바로 사용이 가능하게 만드는 것이다. 클래스 처럼\r\n            변수,메소드 등을 가져오는것이 아니라 그냥 그 짜여진 프로그램을 통째로 가져와서 바로 사용할 수 있는것이다.\r\n            페이스북은 리액트 컴포넌트가 몇천,몇만개로 구성이 되어있다고 한다.\r\n            백엔드를 공부하고 싶지만 리액트에서 컴포넌트를 사용하고 \r\n            그 매력에 빠져서 공부중이다라고 한다면 얼마나 좋은지 대답이 될 것 같다.</p>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_9_','4','.png']}> </ImageSlider> <br/>\r\n\r\n            <p stitle=\"10) Servlet 생명주기\" content=\"Servlet 이해\"/>\r\n            <p>✔ Servlet은 생명주기가 존재한다. Init() - Service() - Destroy() </p>\r\n            <p>✔ Servlet 공간에 Servlet 객체는 한개만 존재하고 똑같은 객체는 만들지 않는다. </p>\r\n            <p> 1. 사용자가 처음으로 요청을 하면 init()과 service() 메소드를 실행한다. - 메모리에 객체가 없으므로 생성하고 service() 실행 </p>\r\n            <p> 2. 사용자가 다시 요청을 하면 service() 메소드만 실행을 한다 - 이미 객체가 메모리상에 올라가 있으므로 새롭게 생성하지 않음 </p>\r\n            <p> 3. 사용자가 servlet 코드를 수정을 하고 저장을 하면 destroy()가 실행이 된다. - 다른 객체가 되었으므로 기존에 있던 객체를 삭제 </p>\r\n            <br/>\r\n            <ImageSlider image={arr=['/img/jsp2_10_','0','.png']}> </ImageSlider> <br/>\r\n           \r\n            <p stitle=\"11) \" content=\"\"/>\r\n            <p> </p>\r\n            <ImageSlider image={arr=['/img/jsp2_9_','0','.png']}> </ImageSlider> <br/>           \r\n            \r\n            <p stitle=\"12)\" content=\"\"/>\r\n            <p>  </p>\r\n            <ImageSlider image={arr=['/img/jsp2_9_','0','.png']}> </ImageSlider> <br/>           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jsp2;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\nimport './page.css';\r\n\r\nconst Nodejs1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <a name=\"top\"> </a>\r\n            <p className=\"title\"> Nodejs </p>\r\n            <p className=\"stitle\"> 1) Nodejs란? </p>\r\n            <p>1. 자바스크립트를 서버에서 사용하는 서버사이드 스크립트 언어</p>\r\n            <p>2. 노드 js를 이용하는 기업 window Azure, eBay, LinkedIn, PayPal 등</p>\r\n            <p>3. 프론트엔드 분야에서 백엔드 분야까지 제어를 할 수 있다.(장점) </p>\r\n            <p>4. V8엔진(구글엔진) 위에서 작동하는 이벤트 처리 I/O 프레임 워크</p>\r\n            <p>5. 노드 JS는 비동기 프로그래밍이다.(장점)  </p>\r\n            <p>6. 자바스크립트를 컴파일하고 실행할 수 있는 프레임 워크(기본 모듈이 자바스크립트)</p>\r\n            <p>7. 웹서버 역할을 하는 내장 라이브러리가 존재하고 NPM 패키지가 포함 되어있다.</p>\r\n            <br/>\r\n            <p className=\"stitle\"> 2) Nodejs 다운받기 </p>\r\n            <a href=\"https://nodejs.org/en/\" target=\"_blank\"> 노드 JS 설치 👈</a>\r\n            <p> LTS버전으로 다운 받는것을 추천, 최신버전은 문제가 존재할 수도 있으므로 비추천 </p>\r\n            <p> cmd창 > node -v 입력 > 버전이 나오면 잘 설치가 됨 </p>\r\n            <p> cmd창 > npm -v 입력 > 버전이 나오면 잘 설치가 됨 </p>\r\n            <p> package.json : 데이터베이스에 있는 언어를 문서로 작성해 놓은 파일 , nodejs를 실행하기전에\r\n                필요한 파일을 받거나 설정된 문서 파일\r\n            </p>\r\n            <br />\r\n            <p className=\"stitle\"> 3) Nodejs 시작하기 </p>\r\n            <p>1. VScode 터미널에서 npm init -y 입력 (package.json 만드는 방법)</p>\r\n            <p>2. </p>\r\n            <p>3. </p>\r\n            <p>4. </p>\r\n            <p>5. </p>\r\n            <p>6. </p>\r\n            <p>7. </p>\r\n            <p>8. </p>\r\n            <p>9. </p>\r\n            <p>10. </p>\r\n            {/* (p>{$. })* */}\r\n            {/* <br/> */}\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nodejs1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\nconst OracleDB1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. OracleDB\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) \" content=\"?\"/>\r\n            <p desc=\"\"\r\n            example=\"\"> </p>                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OracleDB1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\nconst MySQL1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. MySQL\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) \" content=\"?\"/>\r\n            <p desc=\"\"\r\n            example=\"\"> </p>                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MySQL1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\nconst Backend_error1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. Backend_error\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) \" content=\"?\"/>\r\n            <p desc=\"\"\r\n            example=\"\"> </p>                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Backend_error1 ;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\n\r\n\r\nconst Html1 = () => {\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. HTML 태그 종류\"><a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) div태그\" content=\"div태그란?\"/>\r\n            <p desc=\"div태그는 특징이 없는 태그로 가로의 공간을 모두 차지하는 특성(block속성이라한다.)만 존재한다.\r\n            아래 2)의 span태그와 비교하기를 바란다.\" \r\n            issue=\"\" def=\"<div> </div>\" use=\"<div> HTML코드 작성 </div>\" \r\n            example=\"<div style={{background: 'red'}}> div태그 </div>\"> </p>\r\n            <div style={{background: 'red'}}> div태그 </div>\r\n\r\n            <p stitle=\"2) span태그\" content=\"span태그란?\"/>\r\n            <p desc=\"span태그는 특징이 없는 태그로 div태그와는 달리 가로의 공간을 모두 차지하지 않고\r\n            글씨로 작성된 공간(inline속성이라한다.)만을 차지한다.\" \r\n            issue=\"\" def=\"<span> </span>\" use=\"<span> HTML코드 작성 </span>\" \r\n            example=\"<span style={{background: 'red'}}> span태그 </span>\"> </p>\r\n            <span style={{background: 'red'}}> span태그 </span>\r\n\r\n            <p stitle=\"3) p태그\" content=\"p태그란?\"/>\r\n            <p desc=\"p태그는 div태그+<br> (띄어쓰기) 가 추가된 태그이다. 글을 작성할때 문단을 구분해주는 용도이다.\"\r\n            issue=\"\" def=\"<p> </p>\" use=\"<p> HTML 코드 작성</p>\" \r\n            example=\"<p style={{background: 'red'}}> p태그 </p>\"> </p>\r\n            <p style={{background: 'red'}}> p태그 </p>\r\n\r\n            <p stitle=\"4) h태그\" content=\"h태그란?\"/>\r\n            <p desc=\"h태그는 h1,h2,h3,h4,h5,h6로 이루어져 있으며 각 태그마다 글자의 크기가 정해져 있는 태그이다.\r\n            변경은 가능하지만 변경을 하지 않고 그대로 사용하는 것을 권유하는 바이다.\" \r\n            issue=\"\" def=\"<h1> </h1> ~ <h6> </h6>\" use=\"<h1> HTML 코드 작성 </h1>\" \r\n            example=\"\r\n            <h1 style={{background: 'red'}}> h1태그 </h1>\r\n            <h2 style={{background: 'red'}}> h2태그 </h2>\r\n            <h3 style={{background: 'red'}}> h3태그 </h3>\r\n            <h4 style={{background: 'red'}}> h4태그 </h4>\r\n            <h5 style={{background: 'red'}}> h5태그 </h5>\r\n            <h6 style={{background: 'red'}}> h6태그 </h6>\"> </p>\r\n            <h1 style={{background: 'red'}}> h1태그 </h1>\r\n            <h2 style={{background: 'red'}}> h2태그 </h2>\r\n            <h3 style={{background: 'red'}}> h3태그 </h3>\r\n            <h4 style={{background: 'red'}}> h4태그 </h4>\r\n            <h5 style={{background: 'red'}}> h5태그 </h5>\r\n            <h6 style={{background: 'red'}}> h6태그 </h6>\r\n\r\n            <p stitle=\"5) a태그\" content=\"a태그란?\"/>\r\n            <p desc=\"a태그는 url코드를 가지고 있는 태그이다. link로 되어있는 글을 클릭하면 다른 주소로\r\n            이동하는 것을 보았을 텐데 그떄 사용하는 태그이다.\"\r\n            issue=\"\" def=\"<a> </a>\" use=\"<a> HTML 코드 작성 </a>\" \r\n            example=\"<a href='http://www.naver.com' target='blank' style={{background: 'red'}}> www.naver.com </a>\"> </p>\r\n            <a href=\"https://www.naver.com\" target='blank' style={{background: 'red'}}> www.naver.com </a>\r\n            <p>✔ href=\"#\" 을 사용하면 클릭은 되지만 아무런 반응이 일어나지 않는 a태그가 된다 </p>\r\n            <p>✔ target='blank'를 사용하면 새로운 탭을 열게된다. </p>\r\n            <p>✔ 원래는 밑줄이 그어져 있으나 css에서 outline:none을 사용하여 밑줄이 보이지 않는다. </p>\r\n            <p>✔ 도착지: a태그에 name='도착지이름' , 출발지: a태그에 href='#도착지이름' 이와 같이 사용하면\r\n                맨위로 , 맨아래로, 내부 페이지에서 특정 위치로 이동이 가능하다.\r\n                아래 예시는 도착지: name='top'  출발지: href='#top' 이와같이 설정되어 있다. \r\n                반드시 둘다 a태그로 구성되어 있을것 !!! </p>\r\n            <a href=\"#top\"> 맨위로 가기 </a>\r\n            \r\n            <p stitle=\"6) \" content=\"란?\"/>\r\n            <p desc=\"\"\r\n            issue=\"\" def=\"<ㅁ> </ㅁ>\" use=\"<> HTML 코드 작성 </>\" \r\n            example=\"< style={{background: 'red'}}>  </>\"> </p>\r\n            <p style={{background: 'red'}}> </p>\r\n\r\n            <p stitle=\"7) \" content=\"란?\"/>\r\n            <p desc=\"\"\r\n            issue=\"\" def=\"<ㅁ> </ㅁ>\" use=\"<> HTML 코드 작성 </>\" \r\n            example=\"< style={{background: 'red'}}>  </>\"> </p>\r\n            <p style={{background: 'red'}}>  </p>\r\n\r\n            <p stitle=\"8) \" content=\"란?\"/>\r\n            <p desc=\"\"\r\n            issue=\"\" def=\"<ㅁ> </ㅁ>\" use=\"<> HTML 코드 작성 </>\" \r\n            example=\"< style={{background: 'red'}}>  </>\"> </p>\r\n            <p style={{background: 'red'}}>  </p>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Html1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\n//Newwork\r\nconst Network1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. Network 기초\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) Protocol\" content=\"Protocol 이란?\"/>\r\n            <p text=\"데이터를 전송하는 통신 규약, 어떻게 데이터를 전송을 할지\r\n            전 세계적으로 정해놓아서 통일된 약속이다. 예를 들어 우리가 택배를 보내는데\r\n            보내는 사람, 받는 사람, 받는 주소를 적어야 하는 것처럼 프로토콜을 여러개의 계층, 패킷으로\r\n            이루어져있다.\"\r\n            example=\"\"> </p>\r\n\r\n            \r\n            <p stitle=\"2) OSI 7 Layer\" content=\"OSI 7 layer?\"/>\r\n            <p text=\"통신하는데 보내는 프로토콜을 7단계로 나누어 표현을 한 방식\"> </p>\r\n            <p text=\"1~7계층 까지 물리-데이터링크-네트워크-전송-세션-표현-응용 \r\n            이렇게 7가지 정도로 나뉘어진다.\"> </p>\r\n            <p>1계층 : 이진화된 데이터 </p>\r\n            <p>2계층 : MAC 주소 (IP주소 보다 좀 더 자세한 주소) </p>\r\n            <p>3계층 : IP 주소 </p>\r\n            <p>4계층 : 데이터 흐름 (TCP/IP , UDP) </p>\r\n            <p>5계층 : 동기화 </p>\r\n            <p>6계층 : 암호화 - 복호화 </p>\r\n            <p>7계층 : 데이터를 해석해주는 프로그램 </p>\r\n\r\n            <p stitle=\"3) OSI 7 Layer 1계층 \" content=\"?\"/>\r\n            <p text=\"\"> </p>\r\n\r\n            <p stitle=\"4) OSI 7 Layer 2계층\" content=\"?\"/>\r\n            <p text=\"\"> </p>\r\n\r\n            <p stitle=\"5) OSI 7 Layer 3계층\" content=\"?\"/>\r\n            <p>IP주소를 가지고 있는 계층으로 IPv4를 일반적으로 사용하지만전세계 IP주소가 부족하여 IPv6를 사용하려 한다. </p>\r\n            <p>하지만 IPv6로 사용을 하려면 모든 기존 기기를 바꿔야 하는 단점이 있다. </p>\r\n            <p>그래서 IP주소의 부족으로 개선된 방법중에 사설IP와 공인IP라는 개념이 있다. </p>\r\n            <p>라우터, 공유기 등등 설명추가 </p>\r\n\r\n            <p stitle=\"6) OSI 7 Layer 4계층\" content=\"?\"/>\r\n            <p> </p>\r\n\r\n            <p stitle=\"7) OSI 7 Layer 5계층\" content=\"?\"/>\r\n            <p> </p>\r\n\r\n            <p stitle=\"8) OSI 7 Layer 6계층\" content=\"?\"/>\r\n            <p> </p>\r\n\r\n            <p stitle=\"9) OSI 7 Layer 7계층\" content=\"?\"/>\r\n            <p> </p>\r\n\r\n            <p stitle=\"10) \" content=\"?\"/>\r\n            <p> DNS , URL , 네트워크 , 웹, 인터넷, 서버, 프로토콜, </p>\r\n            <p> GET , POST </p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Network1;","import React from 'react';\r\nimport ImageSlider from './ImageSlider.js';\r\n\r\nconst Design1 = () => {\r\n    var arr = [];\r\n\r\n    return(\r\n        <div className=\"page_container\">\r\n            <p div=\"1. Backend_error\"> <a name=\"top\"> </a></p>\r\n\r\n            <p stitle=\"1) \" content=\"?\"/>\r\n            <p desc=\"\"\r\n            example=\"\"> </p>                      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Design1;","import React,{useEffect, useState} from 'react';\r\nimport Java1 from './page/Java1.js';\r\nimport Jsp1 from './page/Jsp1.js';\r\nimport Jsp2 from './page/Jsp2.js';\r\nimport Nodejs1 from './page/Nodejs1.js';\r\nimport OracleDB1 from './page/OracleDB1.js';\r\nimport MySQL1 from './page/MySQL1.js';\r\nimport Backend_error1 from './page/Backend_error1.js';\r\nimport Html1 from './page/Html1.js';\r\nimport Network1 from './page/Network1.js';\r\nimport Design1 from './page/Design1.js';\r\n\r\n// 컨트롤러 역할\r\nconst Page = (props) => {\r\n    const [page,setPage] = useState('mainpage');\r\n    useEffect(()=> { setPage(props.page); },[props.page])\r\n\r\n    switch(page) {\r\n        case 'main':\r\n            return(<p></p>);\r\n            // 백엔드\r\n        case 'java1':\r\n            return(<Java1></Java1>);            \r\n        case 'jsp1': //jsp - apachetomcat - mysql\r\n            return(<Jsp1></Jsp1>);\r\n        case 'jsp2': //jsp - apachetomcat - oracledb\r\n            return(<Jsp2></Jsp2>);\r\n        case 'nodejs1': //nodejs\r\n            return(<Nodejs1></Nodejs1>);\r\n        case 'OracleDB':\r\n            return(<OracleDB1></OracleDB1>);\r\n        case 'MySQL':\r\n            return(<MySQL1></MySQL1>);\r\n        case 'Backend_error':\r\n            return(<Backend_error1></Backend_error1>);\r\n        case 'html1':\r\n            return(<Html1></Html1>);\r\n        case 'network1':\r\n            return(<Network1></Network1>);\r\n        case 'design1':\r\n            return(<Design1></Design1>);\r\n        default:\r\n            return(<></>);\r\n    }\r\n\r\n}\r\nexport default Page;\r\n","import './Section2.css';\r\nimport {useState, useEffect} from 'react';\r\nimport Page from './page.js';\r\n\r\n//화면 2분할 좌측 760px , 우측 248px, 반응형 3단계 1024, 768\r\nconst Section2 = (props) => {\r\n    const [changePage,setChangePage] = useState('main');\r\n\r\n    // Sidemenulist에서 목록을 누르면 section구간에 페이지를 랜더링 해줌\r\n    useEffect( ()=> {\r\n      console.log(\"새로운 페이지 렌더링\");\r\n      setChangePage(props.page);\r\n    },[props.page])\r\n\r\n    return (\r\n      <section className=\"section2_container\">\r\n        <div className=\"section2_frame\">\r\n          <div className=\"area1_container area_container\">\r\n             <Page page={changePage}> </Page>\r\n          </div>\r\n          <div className=\"area2_container area_container\">\r\n            사이드 메뉴\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\nexport default Section2;","import React, { useState } from 'react';\nimport Nav1 from './components/Navigation/Nav1.js';\nimport './App.css';\nimport Section1 from './components/Section/Section1.js';\nimport Section2 from './components/Section/Section2.js';\n\nconst App = () => {\n    const [whatPage,setWhatPage] = useState('main');\n\n    const changePage = (page,e) => {\n      setWhatPage(page);\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"App_container\">\n          <Nav1 onChangePage={(page)=>{{changePage(page)}}}>  </Nav1>\n          {whatPage==='main'?<Section1></Section1>:<Section2 page={whatPage}> </Section2>}\n        </div>\n      </React.Fragment>\n    );\n}\n\nexport default App;\n\n\n\n{/* <React.Fragment>\n<div className=\"body_container\">\n  <a name=\"_top\"> </a>\n  <Nav className=\"Nav_container\" onChangePage={(page)=>{{changePage(page)}}}> </Nav>\n  {whatPage==='main'?<HomePage></HomePage>:<Section page={whatPage}> </Section>}\n  <Footer> </Footer>\n</div>\n<a href=\"#_top\" className=\"top\">\n    맨 위로\n</a>\n</React.Fragment> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* \n여기에 있는 React, ReactDOM은 여러개의 JSX 파일들을\n하나로 합치기 위해서 설정되어 있는 creative reactweb이라 한다.\n만약에 처음에 한번에 받지 않는 경우 일일히 파일을 만들고\n설정을 해주어야 하는 번거로움이 있다.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; //App.js를 실행시킴\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<App /> ,\n  // <div id=\"root\"> </div> 란 문구가 public-index.html에 존재한다.\n  // 즉 App.jsx를 html파일에 랜더링을 한다는 것이다.\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}